error: Incorrect function signature, expected two arguments of types `EfiHandle` and `SystemTable<Boot>`
       Try `fn e_main(handle: EfiHandle, table: SystemTable<Boot>) -> error::Result<()>`
 --> tests/entry/fail/empty.rs:5:1
  |
5 | fn e_main() {}
  | ^^^^^^^^^^^

error[E0061]: this function takes 0 arguments but 2 arguments were supplied
 --> tests/entry/fail/empty.rs:5:4
  |
4 | #[entry]
  | --------
  | |
  | unexpected argument of type `EfiHandle`
  | unexpected argument of type `SystemTable<Boot>`
5 | fn e_main() {}
  |    ^^^^^^
  |
note: function defined here
 --> tests/entry/fail/empty.rs:5:4
  |
5 | fn e_main() {}
  |    ^^^^^^

error[E0308]: mismatched types
 --> tests/entry/fail/empty.rs:4:1
  |
4 | #[entry]
  | ^^^^^^^^
  | |
  | expected `Result<(), UefiError>`, found `()`
  | expected `Result<(), UefiError>` because of return type
  |
  = note:   expected enum `Result<(), UefiError>`
          found unit type `()`
  = note: this error originates in the attribute macro `entry` (in Nightly builds, run with -Z macro-backtrace for more info)
help: try wrapping the expression in `Ok`
  |
4 | Ok(#[entry])
  | +++        +
